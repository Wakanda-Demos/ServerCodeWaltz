var state = 0; onmessage = function (event) {    if (state == 0) {            // Waiting for a message from parent, just received it        console.log("child called");        console.log(event.data);    // "Go ahead"        var numberOfCoops = event.data.numberOfCoops;        var progressReference = event.data.progressReference        console.log(progressReference);        include ("scripts/generateData.js");        generateSomeData(numberOfCoops, progressReference);                setTimeout(function(){            console.log('timeout fired');            close();        }, 5000 )        console.log("Generated Data");                            // Reply to parent. Note that postMessage() is a global method. It will send a message to the parent's            // worker proxy object onmessage attribute.        //postMessage("Child started");             // Go back to idle, waiting for next message.        state = 1;                     } else {    // state == 1            // Waiting for a message from parent to terminate, just received it.        console.log(event.data);    // "Please quit".            // Sends a message back to parent, we're done.        postMessage("Child finished");            // Terminate.        close();    }}